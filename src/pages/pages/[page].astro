---
import type { GetStaticPaths } from "astro";
import BaseLayout from "@/layouts/BaseLayout.astro";
import EntriesOne from "@/components/entries/EntriesOne.astro";
import Hero from "@/components/landing/Hero.astro";
import allPosts from "@/utils/allCollection";

export const getStaticPaths = (({ paginate }) => {
  const sortedPosts = allPosts.sort(
    (a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime()
  );
  return paginate(sortedPosts, { pageSize: 21 });
}) satisfies GetStaticPaths;

const { page } = Astro.props;

const pages = page.data;
const tags = [...new Set(pages.map((post) => post.data.tags).flat())];

// Sort posts by date in descending order (newest first)
const sortedPosts = page.data;
---

<BaseLayout>
  <Hero />
  <section>
    <div class="px-8 md:px-12 mx-auto max-w-7xl py-12 lg:px-32">
      <ol role="list" class="flex flex-wrap gap-3">
        {
          tags.map((tag) => (
            <li class="inline-flex items-center uppercase mx-auto hover:text-blue-500 text-xs font-medium text-black">
              <a href={`/tags/${tag}`}>{tag}</a>
            </li>
          ))
        }
      </ol>
      <ul
        class="grid grid-cols-1 mt-12 gap-1 gap-y-24 lg:grid-cols-3 sm:grid-cols-2"
      >
        <!-- {
          sortedPosts.map((post) => (
            <SimpleEntry
              url={post.slug}
              title={post.data.title}
              pubDate={post.data.date.toString().slice(4, 15)}
            />
          ))
        } -->
        {
          sortedPosts.map((post) => (
            <EntriesOne
              url={post.slug}
              title={post.data.title}
              description={post.data.description}
              alt={post.data.title}
              pubDate={post.data.date.toString().slice(4, 15)}
              author={post.data.author}
              image={post.data.image?.url}
              tags={post.data.tags}
            />
          ))
        }
      </ul>
    </div>
  </section>
  <!-- <Cta /> -->
</BaseLayout>
